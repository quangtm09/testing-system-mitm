package com.bosch.rts.entity;

// Generated Nov 14, 2011 9:29:48 AM by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * RoleHasPrivilege generated by hbm2java.
 */
@Entity
@Table(name = "trts_role_has_privilege")
public class RoleHasPrivilege implements java.io.Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = -8244627531016658908L;
	
	/** The rhp role privilege id. */
	private Integer rhpRolePrivilegeId;
	
	/** The user role. */
	private UserRole userRole;
	
	/** The privilege. */
	private Privilege privilege;

	/**
	 * Instantiates a new role has privilege.
	 */
	public RoleHasPrivilege() {
	}

	/**
	 * Instantiates a new role has privilege.
	 *
	 * @param userRole the user role
	 * @param privilege the privilege
	 */
	public RoleHasPrivilege(UserRole userRole, Privilege privilege) {
		this.userRole = userRole;
		this.privilege = privilege;
	}

	/**
	 * Gets the rhp role privilege id.
	 *
	 * @return the rhp role privilege id
	 */
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "rhp_role_privilege_id", unique = true, nullable = false)
	public Integer getRhpRolePrivilegeId() {
		return this.rhpRolePrivilegeId;
	}

	/**
	 * Sets the rhp role privilege id.
	 *
	 * @param rhpRolePrivilegeId the new rhp role privilege id
	 */
	public void setRhpRolePrivilegeId(Integer rhpRolePrivilegeId) {
		this.rhpRolePrivilegeId = rhpRolePrivilegeId;
	}

	/**
	 * Gets the user role.
	 *
	 * @return the user role
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "rhp_usr_user_role_id")
	public UserRole getUserRole() {
		return this.userRole;
	}

	/**
	 * Sets the user role.
	 *
	 * @param userRole the new user role
	 */
	public void setUserRole(UserRole userRole) {
		this.userRole = userRole;
	}

	/**
	 * Gets the privilege.
	 *
	 * @return the privilege
	 */
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "rhp_prv_privilege_id")
	public Privilege getPrivilege() {
		return this.privilege;
	}

	/**
	 * Sets the privilege.
	 *
	 * @param privilege the new privilege
	 */
	public void setPrivilege(Privilege privilege) {
		this.privilege = privilege;
	}

}
