package com.bosch.rts.entity;


import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Attachment generated by hbm2java.
 */
@Entity
@Table(name = "trts_recruit_request_has_attachments")
public class RecruitRequestHasAttachment implements java.io.Serializable {

	
	/** serialVersionUID. */
	private static final long serialVersionUID = 8302989931290685671L;
	
	/** The attachment id. */
	private Integer attachmentId;
	
	/** The recruit request. */
	private RecruitRequest recruitRequest;
	
	/** The attachment name. */
	private String attachmentName;
	
	/** The attachment description. */
	private String attachmentDescription;
	
	/** The attachment created on. */
	private Date attachmentCreatedOn;
	
	/** The attachment created by. */
	private String attachmentCreatedBy;
	
	/** The attachment updated on. */
	private Date attachmentUpdatedOn;
	
	/** The attachment updated by. */
	private String attachmentUpdatedBy;
	
	/** The attachment base path. */
	private String attachmentBasePath;
	
	/** The attachment length. */
	private int attachmentLength;
	
	/** The attachment status. */
	private String attachmentStatus;
	 
	/**
	 * Instantiates a new recruit request has attachment.
	 */
	public RecruitRequestHasAttachment() {
	}

	/**
	 * Gets the attachment status.
	 *
	 * @return the attachment status
	 */
	@Column(name = "rha_attachment_status", nullable=false)	
	public String getAttachmentStatus() {
		return attachmentStatus;
	}

	/**
	 * Sets the attachment status.
	 *
	 * @param attachmentStatus the new attachment status
	 */
	public void setAttachmentStatus(String attachmentStatus) {
		this.attachmentStatus = attachmentStatus;
	}

	/**
	 * Instantiates a new recruit request has attachment.
	 *
	 * @param attachmentName the attachment name
	 * @param attachmentDescription the attachment description
	 * @param attachmentCreatedOn the attachment created on
	 * @param attachmentCreatedBy the attachment created by
	 * @param attachmentBasePath the attachment base path
	 */
	public RecruitRequestHasAttachment(String attachmentName, String attachmentDescription,
			Date attachmentCreatedOn, String attachmentCreatedBy,
			String attachmentBasePath) {
		this.attachmentName = attachmentName;
		this.attachmentDescription = attachmentDescription;
		this.attachmentCreatedOn = attachmentCreatedOn;
		this.attachmentCreatedBy = attachmentCreatedBy;
		this.attachmentBasePath = attachmentBasePath;
	}

	/**
	 * Instantiates a new recruit request has attachment.
	 *
	 * @param recruitRequest the recruit request
	 * @param attachmentName the attachment name
	 * @param attachmentDescription the attachment description
	 * @param attachmentCreatedOn the attachment created on
	 * @param attachmentCreatedBy the attachment created by
	 * @param attachmentUpdatedOn the attachment updated on
	 * @param attachmentUpdatedBy the attachment updated by
	 * @param attachmentBasePath the attachment base path
	 * @param attachmentLength the attachment length
	 * @param attachmentStatus the attachment status
	 */
	public RecruitRequestHasAttachment(RecruitRequest recruitRequest,
			String attachmentName, String attachmentDescription,
			Date attachmentCreatedOn, String attachmentCreatedBy,
			Date attachmentUpdatedOn, String attachmentUpdatedBy,
			String attachmentBasePath, int attachmentLength, 
			String attachmentStatus) {
		this.recruitRequest = recruitRequest;
		this.attachmentName = attachmentName;
		this.attachmentDescription = attachmentDescription;
		this.attachmentCreatedOn = attachmentCreatedOn;
		this.attachmentCreatedBy = attachmentCreatedBy;
		this.attachmentUpdatedOn = attachmentUpdatedOn;
		this.attachmentUpdatedBy = attachmentUpdatedBy;
		this.attachmentBasePath = attachmentBasePath;
		this.attachmentLength = attachmentLength;
		this.attachmentStatus = attachmentStatus;
	}
	
	/**
	 * Sets the attachment length.
	 *
	 * @param attachmentLength the new attachment length
	 */
	public void setAttachmentLength(int attachmentLength) {
		this.attachmentLength = attachmentLength;
	}
	
	/**
	 * Gets the attachment length.
	 *
	 * @return the attachment length
	 */
	@Column(name = "rha_attachment_length", nullable=false)
	@NotNull
	public int getAttachmentLength() {
		return attachmentLength;
	}

	/**
	 * Gets the attachment id.
	 *
	 * @return the attachment id
	 */
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "rha_attachment_id", unique = true, nullable = false)
	public Integer getAttachmentId() {
		return this.attachmentId;
	}

	/**
	 * Sets the attachment id.
	 *
	 * @param attachmentId the new attachment id
	 */
	public void setAttachmentId(Integer attachmentId) {
		this.attachmentId = attachmentId;
	}

	/**
	 * Gets the recruit request.
	 *
	 * @return the recruit request
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "rha_attachment_recruit_request_id")
	public RecruitRequest getRecruitRequest() {
		return this.recruitRequest;
	}

	/**
	 * Sets the recruit request.
	 *
	 * @param recruitRequest the new recruit request
	 */
	public void setRecruitRequest(RecruitRequest recruitRequest) {
		this.recruitRequest = recruitRequest;
	}

	/**
	 * Gets the attachment name.
	 *
	 * @return the attachment name
	 */
	@Column(name = "rha_attachment_name", nullable = false, length = 128)
	@NotNull
	@Length(max = 128)
	public String getAttachmentName() {
		return this.attachmentName;
	}

	/**
	 * Sets the attachment name.
	 *
	 * @param attachmentName the new attachment name
	 */
	public void setAttachmentName(String attachmentName) {
		this.attachmentName = attachmentName;
	}

	/**
	 * Gets the attachment description.
	 *
	 * @return the attachment description
	 */
	@Column(name = "rha_attachment_description", length = 200)
	@Length(max = 200)
	public String getAttachmentDescription() {
		return this.attachmentDescription;
	}

	/**
	 * Sets the attachment description.
	 *
	 * @param attachmentDescription the new attachment description
	 */
	public void setAttachmentDescription(String attachmentDescription) {
		this.attachmentDescription = attachmentDescription;
	}

	/**
	 * Gets the attachment created on.
	 *
	 * @return the attachment created on
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "rha_attachment_created_on", length = 0)
	public Date getAttachmentCreatedOn() {
		return this.attachmentCreatedOn;
	}

	/**
	 * Sets the attachment created on.
	 *
	 * @param attachmentCreatedOn the new attachment created on
	 */
	public void setAttachmentCreatedOn(Date attachmentCreatedOn) {
		this.attachmentCreatedOn = attachmentCreatedOn;
	}

	/**
	 * Gets the attachment created by.
	 *
	 * @return the attachment created by
	 */
	@Column(name = "rha_attachment_created_by", length = 45)
	@Length(max = 45)
	public String getAttachmentCreatedBy() {
		return this.attachmentCreatedBy;
	}

	/**
	 * Sets the attachment created by.
	 *
	 * @param attachmentCreatedBy the new attachment created by
	 */
	public void setAttachmentCreatedBy(String attachmentCreatedBy) {
		this.attachmentCreatedBy = attachmentCreatedBy;
	}

	/**
	 * Gets the attachment updated on.
	 *
	 * @return the attachment updated on
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "rha_attachment_updated_on", length = 0)
	public Date getAttachmentUpdatedOn() {
		return this.attachmentUpdatedOn;
	}

	/**
	 * Sets the attachment updated on.
	 *
	 * @param attachmentUpdatedOn the new attachment updated on
	 */
	public void setAttachmentUpdatedOn(Date attachmentUpdatedOn) {
		this.attachmentUpdatedOn = attachmentUpdatedOn;
	}

	/**
	 * Gets the attachment updated by.
	 *
	 * @return the attachment updated by
	 */
	@Column(name = "rha_attachment_updated_by", length = 45)
	@Length(max = 45)
	public String getAttachmentUpdatedBy() {
		return this.attachmentUpdatedBy;
	}

	/**
	 * Sets the attachment updated by.
	 *
	 * @param attachmentUpdatedBy the new attachment updated by
	 */
	public void setAttachmentUpdatedBy(String attachmentUpdatedBy) {
		this.attachmentUpdatedBy = attachmentUpdatedBy;
	}

	/**
	 * Gets the attachment base path.
	 *
	 * @return the attachment base path
	 */
	@Column(name = "rha_attachment_base_path",length = 45)
	@Length(max = 45)
	public String getAttachmentBasePath() {
		return this.attachmentBasePath;
	}

	/**
	 * Sets the attachment base path.
	 *
	 * @param attachmentBasePath the new attachment base path
	 */
	public void setAttachmentBasePath(String attachmentBasePath) {
		this.attachmentBasePath = attachmentBasePath;
	}
	
	/* (non-Javadoc)
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString(){
		return UploadUtils.humanReadableFileLength(attachmentLength);		
	}

}