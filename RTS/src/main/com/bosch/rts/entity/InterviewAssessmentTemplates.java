package com.bosch.rts.entity;

// Generated Jun 12, 2013 5:34:00 PM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.apache.commons.beanutils.BeanComparator;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * InterviewAssessmentTemplates generated by hbm2java.
 */
@Entity
@Table(name = "trts_interview_assessment_templates")
public class InterviewAssessmentTemplates implements java.io.Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 3744873660706062671L;	
	
	/** The id. */
	private Integer id;
	
	/** The name. */
	private String name;
	
	/** The description. */
	private String description;
	
	/** The active. */
	private char active;
	
	/** The created on. */
	private Date createdOn;
	
	/** The created by. */
	private String createdBy;
	
	/** The updated on. */
	private Date updatedOn;
	
	/** The updated by. */
	private String updatedBy;	
	
	/** The applied for level. */
	private int appliedForLevel;
	
	/** The technical result groups. */
	private Set<TechnicalResultGroup> technicalResultGroups = new HashSet<TechnicalResultGroup>(0);
	
	/** The technical results. */
	private Set<TechnicalResult> technicalResults = new HashSet<TechnicalResult>(0);
	
	
	/**
	 * Gets the technical results.
	 *
	 * @return the technicalResults
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "interviewAssessmentTemplates", cascade = CascadeType.ALL)
	public Set<TechnicalResult> getTechnicalResults() {
		return this.technicalResults;
	}

	/**
	 * Sets the technical results.
	 *
	 * @param technicalResults the technicalResults to set
	 */
	public void setTechnicalResults(Set<TechnicalResult> technicalResults) {
		this.technicalResults = technicalResults;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
		return result;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (!(obj instanceof InterviewAssessmentTemplates))
			return false;
		InterviewAssessmentTemplates other = (InterviewAssessmentTemplates) obj;
		if (this.id == null) {
			if (other.id != null)
				return false;
		} else if (!this.id.equals(other.id))
			return false;
		return true;
	}

	/**
	 * Instantiates a new interview assessment templates.
	 */
	public InterviewAssessmentTemplates() {
	}

	/**
	 * Instantiates a new interview assessment templates.
	 *
	 * @param name the name
	 * @param active the active
	 * @param createdOn the created on
	 * @param createdBy the created by
	 */
	public InterviewAssessmentTemplates(String name, char active,
			Date createdOn, String createdBy) {
		this.name = name;
		this.active = active;
		this.createdOn = createdOn;
		this.createdBy = createdBy;
	}

	/**
	 * Instantiates a new interview assessment templates.
	 *
	 * @param name the name
	 * @param description the description
	 * @param active the active
	 * @param createdOn the created on
	 * @param createdBy the created by
	 * @param updatedOn the updated on
	 * @param updatedBy the updated by
	 * @param technicalResultGroups the technical result groups
	 * @param technicalResults the technical results
	 * @param appliedForLevel the applied for level
	 */
	public InterviewAssessmentTemplates(String name, String description,
			char active, Date createdOn, String createdBy, Date updatedOn,
			String updatedBy, Set<TechnicalResultGroup> technicalResultGroups,
			Set<TechnicalResult> technicalResults, int appliedForLevel) {
		this.name = name;
		this.description = description;
		this.active = active;
		this.createdOn = createdOn;
		this.createdBy = createdBy;
		this.updatedOn = updatedOn;
		this.updatedBy = updatedBy;
		this.technicalResultGroups = technicalResultGroups;
		this.technicalResults = technicalResults;
		this.appliedForLevel = appliedForLevel;
	}

	/**
	 * Gets the id.
	 *
	 * @return the id
	 */
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	/**
	 * Sets the id.
	 *
	 * @param id the new id
	 */
	public void setId(Integer id) {
		this.id = id;
	}

	/**
	 * Gets the name.
	 *
	 * @return the name
	 */
	@Column(name = "name", nullable = false, length = 45)
	@NotNull
	@Length(max = 45)
	public String getName() {
		return this.name;
	}

	/**
	 * Sets the name.
	 *
	 * @param name the new name
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * Gets the description.
	 *
	 * @return the description
	 */
	@Column(name = "description", length = 200)
	@Length(max = 200)
	public String getDescription() {
		return this.description;
	}

	/**
	 * Sets the description.
	 *
	 * @param description the new description
	 */
	public void setDescription(String description) {
		this.description = description;
	}

	/**
	 * Gets the active.
	 *
	 * @return the active
	 */
	@Column(name = "active", nullable = false, length = 1)
	public char getActive() {
		return this.active;
	}

	/**
	 * Sets the active.
	 *
	 * @param active the new active
	 */
	public void setActive(char active) {
		this.active = active;
	}

	/**
	 * Gets the created on.
	 *
	 * @return the created on
	 */
	@Temporal(TemporalType.DATE)
	@Column(name = "created_on", nullable = false, length = 0)
	@NotNull
	public Date getCreatedOn() {
		return this.createdOn;
	}

	/**
	 * Sets the created on.
	 *
	 * @param createdOn the new created on
	 */
	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	/**
	 * Gets the created by.
	 *
	 * @return the created by
	 */
	@Column(name = "created_by", nullable = false, length = 12)
	@NotNull
	@Length(max = 12)
	public String getCreatedBy() {
		return this.createdBy;
	}

	/**
	 * Sets the created by.
	 *
	 * @param createdBy the new created by
	 */
	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	/**
	 * Gets the updated on.
	 *
	 * @return the updated on
	 */
	@Temporal(TemporalType.DATE)
	@Column(name = "updated_on", length = 0)
	public Date getUpdatedOn() {
		return this.updatedOn;
	}

	/**
	 * Sets the updated on.
	 *
	 * @param updatedOn the new updated on
	 */
	public void setUpdatedOn(Date updatedOn) {
		this.updatedOn = updatedOn;
	}

	/**
	 * Gets the updated by.
	 *
	 * @return the updated by
	 */
	@Column(name = "updated_by", length = 12)
	@Length(max = 12)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	/**
	 * Sets the updated by.
	 *
	 * @param updatedBy the new updated by
	 */
	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	/**
	 * Sets the technical result groups.
	 *
	 * @param technicalResultGroups the technicalResultGroups to set
	 */
	public void setTechnicalResultGroups(Set<TechnicalResultGroup> technicalResultGroups) {
		this.technicalResultGroups = technicalResultGroups;
	}

	/**
	 * Gets the technical result groups.
	 *
	 * @return the technicalResultGroups
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "interviewAssessmentTemplates", cascade = CascadeType.ALL)
	public Set<TechnicalResultGroup> getTechnicalResultGroups() {
		return technicalResultGroups;
	}
	
	/**
	 * Sets the applied for level.
	 *
	 * @param appliedForLevel the new applied for level
	 */
	public void setAppliedForLevel(int appliedForLevel) {
		this.appliedForLevel = appliedForLevel;
	}

	/**
	 * Gets the applied for level.
	 *
	 * @return the applied for level
	 */
	@Column(name = "applied_for_level")
	public int getAppliedForLevel() {
		return appliedForLevel;
	}

	/**
	 * Gets the groups list.
	 *
	 * @return the groups list
	 */
	@SuppressWarnings("unchecked")
	@Transient
	public List<TechnicalResultGroup> getGroupsList(){
		List<TechnicalResultGroup> groups = null;
		if(this.technicalResultGroups != null && !this.technicalResultGroups.isEmpty()){
			groups = new ArrayList<TechnicalResultGroup>(this.technicalResultGroups);
			final BeanComparator beanComparator = new BeanComparator("position");
			Collections.sort(groups, beanComparator);		
		} 
		return groups;
	}
}
