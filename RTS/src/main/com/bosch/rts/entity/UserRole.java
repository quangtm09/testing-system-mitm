package com.bosch.rts.entity;

// Generated Nov 14, 2011 9:29:48 AM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.validator.NotNull;

/**
 * UserRole generated by hbm2java.
 */
@Entity
@Table(name = "trts_user_role")
public class UserRole implements java.io.Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = -3301276295119234741L;
	
	/** The usr user role id. */
	private Integer usrUserRoleId;
	
	/** The usr role name. */
	private String usrRoleName;
	
	/** The usr description. */
	private String usrDescription;
	
	/** The user has user roles. */
	private Set<UserHasUserRole> userHasUserRoles = new HashSet<UserHasUserRole>(0);
	
	/** The role has privileges. */
	private Set<RoleHasPrivilege> roleHasPrivileges = new HashSet<RoleHasPrivilege>(0);

	/**
	 * Instantiates a new user role.
	 */
	public UserRole() {
	}
	
	/**
	 * Instantiates a new user role.
	 *
	 * @param usrRoleName the usr role name
	 * @param usrDescription the usr description
	 */
	public UserRole(String usrRoleName, String usrDescription) {
		this.usrRoleName = usrRoleName;
		this.usrDescription = usrDescription;
	}

	/**
	 * Instantiates a new user role.
	 *
	 * @param usrRoleName the usr role name
	 * @param usrDescription the usr description
	 * @param userHasUserRoles the user has user roles
	 * @param roleHasPrivileges the role has privileges
	 */
	public UserRole(String usrRoleName, String usrDescription,
			Set<UserHasUserRole> userHasUserRoles,
			Set<RoleHasPrivilege> roleHasPrivileges) {
		this.usrRoleName = usrRoleName;
		this.usrDescription = usrDescription;
		this.userHasUserRoles = userHasUserRoles;
		this.roleHasPrivileges = roleHasPrivileges;
	}

	/**
	 * Gets the usr user role id.
	 *
	 * @return the usr user role id
	 */
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "usr_user_role_id", unique = true, nullable = false)
	public Integer getUsrUserRoleId() {
		return this.usrUserRoleId;
	}

	/**
	 * Sets the usr user role id.
	 *
	 * @param usrUserRoleId the new usr user role id
	 */
	public void setUsrUserRoleId(Integer usrUserRoleId) {
		this.usrUserRoleId = usrUserRoleId;
	}

	/**
	 * Gets the usr role name.
	 *
	 * @return the usr role name
	 */
	@Column(name = "usr_role_name", length = 30)
	@NotNull
	public String getUsrRoleName() {
		return this.usrRoleName;
	}

	/**
	 * Sets the usr role name.
	 *
	 * @param usrRoleName the new usr role name
	 */
	public void setUsrRoleName(String usrRoleName) {
		this.usrRoleName = usrRoleName;
	}

	/**
	 * Gets the usr description.
	 *
	 * @return the usr description
	 */
	@Column(name = "usr_description", length = 100)
	@NotNull
	public String getUsrDescription() {
		return this.usrDescription;
	}

	/**
	 * Sets the usr description.
	 *
	 * @param usrDescription the new usr description
	 */
	public void setUsrDescription(String usrDescription) {
		this.usrDescription = usrDescription;
	}

	/**
	 * Gets the user has user roles.
	 *
	 * @return the user has user roles
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userRole")
	public Set<UserHasUserRole> getUserHasUserRoles() {
		return this.userHasUserRoles;
	}

	/**
	 * Sets the user has user roles.
	 *
	 * @param userHasUserRoles the new user has user roles
	 */
	public void setUserHasUserRoles(Set<UserHasUserRole> userHasUserRoles) {
		this.userHasUserRoles = userHasUserRoles;
	}

	/**
	 * Gets the role has privileges.
	 *
	 * @return the role has privileges
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userRole")
	public Set<RoleHasPrivilege> getRoleHasPrivileges() {
		return this.roleHasPrivileges;
	}

	/**
	 * Sets the role has privileges.
	 *
	 * @param roleHasPrivileges the new role has privileges
	 */
	public void setRoleHasPrivileges(Set<RoleHasPrivilege> roleHasPrivileges) {
		this.roleHasPrivileges = roleHasPrivileges;
	}

}
