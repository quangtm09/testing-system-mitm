package com.bosch.rts.entity;

// Generated Nov 14, 2011 9:29:48 AM by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.UniqueConstraint;

import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.validator.NotNull;

/**
 * UserHasUserRole generated by hbm2java.
 */
@Entity
@Table(name = "trts_user_has_user_role", 
		uniqueConstraints = { @UniqueConstraint( columnNames = { "uhruser_user_role_id", "uhr_usr_user_id" } ) } )
public class UserHasUserRole implements java.io.Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = -1569887277188552144L;
	
	/** The uhr user has role id. */
	private Integer uhrUserHasRoleId;
	
	/** The user role. */
	private UserRole userRole;
	
	/** The user. */
	private User user;

	/**
	 * Instantiates a new user has user role.
	 */
	public UserHasUserRole() {
	}

	/**
	 * Instantiates a new user has user role.
	 *
	 * @param userRole the user role
	 * @param user the user
	 */
	public UserHasUserRole(UserRole userRole, User user) {
		this.userRole = userRole;
		this.user = user;
	}

	/**
	 * Gets the uhr user has role id.
	 *
	 * @return the uhr user has role id
	 */
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "uhr_user_has_role_id", unique = true, nullable = false)
	public Integer getUhrUserHasRoleId() {
		return this.uhrUserHasRoleId;
	}

	/**
	 * Sets the uhr user has role id.
	 *
	 * @param uhrUserHasRoleId the new uhr user has role id
	 */
	public void setUhrUserHasRoleId(Integer uhrUserHasRoleId) {
		this.uhrUserHasRoleId = uhrUserHasRoleId;
	}

	/**
	 * Gets the user role.
	 *
	 * @return the user role
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "uhruser_user_role_id")
	@NotNull
	public UserRole getUserRole() {
		return this.userRole;
	}

	/**
	 * Sets the user role.
	 *
	 * @param userRole the new user role
	 */
	public void setUserRole(UserRole userRole) {
		this.userRole = userRole;
	}

	/**
	 * Gets the user.
	 *
	 * @return the user
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "uhr_usr_user_id")
	@NotNull
	public User getUser() {
		return this.user;
	}

	/**
	 * Sets the user.
	 *
	 * @param user the new user
	 */
	public void setUser(User user) {
		this.user = user;
	}

}
